#!/usr/sbin/nft -f

flush ruleset

# Mangle table for MSS clamping (MTU fixing)
table inet mangle {
    chain forward {
        type filter hook forward priority mangle; policy accept;
        
        # MSS clamping for prague0 WireGuard tunnel (MTU 1380)
        # Clamp to 1340 (1380 - 40 bytes for IP+TCP headers)
        oifname "prague0" tcp flags syn tcp option maxseg size set 1340 counter comment "MSS clamp outbound prague0"
        iifname "prague0" tcp flags syn tcp option maxseg size set 1340 counter comment "MSS clamp inbound prague0"
    }
}

# WireGuard packet marking table
table inet wgmark {
    chain output {
        type route hook output priority 100; policy accept;
        # Mark WireGuard UDP packets (port 51820) for special routing
        udp dport 51820 meta mark set meta mark & 0xff00ffff | 0x00100000 counter comment "wgmark-prague0"
    }
}

# NAT table
table ip nat {
    chain PREROUTING {
        type nat hook prerouting priority dstnat; policy accept;
        
        # Mark WireGuard packets for routing to main table (also in wgmark table above)
        udp dport 51820 meta mark set meta mark & 0xff10ffff | 0x00100000 counter comment "wgmark-prague0-prerouting"
    }

    chain POSTROUTING {
        type nat hook postrouting priority srcnat; policy accept;
        
        # Masquerade WireGuard handshake packets going to eth0
        meta mark & 0x00f00000 == 0x00100000 oifname "eth0" udp dport 51820 counter masquerade comment "NAT-wg-handshake"
        
        # Masquerade all traffic going through prague0 tunnel
        oifname "prague0" counter masquerade comment "NAT-prague0"
    }
}

# Filter table for forwarding rules
table inet filter {
    chain forward {
        type filter hook forward priority filter; policy accept;

        # Allow established and related connections
        ct state established,related counter accept

        # Allow WiFi and eth1 clients to use prague0 WireGuard tunnel
        iifname "wlan0" oifname "prague0" counter accept
        iifname "eth1" oifname "prague0" counter accept
        
        # Allow return traffic from prague0
        iifname "prague0" oifname "wlan0" counter accept
        iifname "prague0" oifname "eth1" counter accept

        # Allow WireGuard handshakes to go out eth0
        iifname "wlan0" oifname "eth0" udp dport 51820 counter accept
        iifname "eth1" oifname "eth0" udp dport 51820 counter accept

        # Kill switch: drop any other traffic from clients directly to eth0
        iifname "wlan0" oifname "eth0" counter drop
        iifname "eth1" oifname "eth0" counter drop
    }
}
